{
  "address": "0xEC9E99000f7728445694eFD0F04c6e3D8527F246",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "isProvider",
          "type": "bool"
        }
      ],
      "name": "BackstopLiquidityProviderChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "liquidationPenaltyRatio",
          "type": "uint24"
        }
      ],
      "name": "LiquidationPenaltyRatioChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "rate",
          "type": "uint24"
        }
      ],
      "name": "MaxFundingRateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "maxMarketsPerAccount",
          "type": "uint8"
        }
      ],
      "name": "MaxMarketsPerAccountChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "partialCloseRatio",
          "type": "uint24"
        }
      ],
      "name": "PartialCloseRatioChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "name": "SettlementTokenBalanceCapChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "twapInterval",
          "type": "uint256"
        }
      ],
      "name": "TwapIntervalChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "candidate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getImRatio",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLiquidationPenaltyRatio",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxFundingRate",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxMarketsPerAccount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMmRatio",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPartialCloseRatio",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSettlementTokenBalanceCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTwapInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBackstopLiquidityProvider",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isProvider",
          "type": "bool"
        }
      ],
      "name": "setBackstopLiquidityProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "liquidationPenaltyRatioArg",
          "type": "uint24"
        }
      ],
      "name": "setLiquidationPenaltyRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "rate",
          "type": "uint24"
        }
      ],
      "name": "setMaxFundingRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "maxMarketsPerAccountArg",
          "type": "uint8"
        }
      ],
      "name": "setMaxMarketsPerAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "partialCloseRatioArg",
          "type": "uint24"
        }
      ],
      "name": "setPartialCloseRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "name": "setSettlementTokenBalanceCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "twapIntervalArg",
          "type": "uint32"
        }
      ],
      "name": "setTwapInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2449e6f0d0c1930278cd8f225bda96a4ce83b4ec7722f50a87c141ab63e8fcf9",
  "receipt": {
    "to": null,
    "from": "0xAD143E30AD4852c97716ED5b32d45BcCfF7DEa36",
    "contractAddress": "0xEC9E99000f7728445694eFD0F04c6e3D8527F246",
    "transactionIndex": 55,
    "gasUsed": "988183",
    "logsBloom": "0x
    "blockHash": "0xa37ae403c2b88dfe1cd038241980c195661435059ccc5030e16f913c1c12d1dc",
    "transactionHash": "0x2449e6f0d0c1930278cd8f225bda96a4ce83b4ec7722f50a87c141ab63e8fcf9",
    "logs": [],
    "blockNumber": 7678413,
    "cumulativeGasUsed": "16138397",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7a16bbbc5c6fea2b6505d4631b28aae2",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isProvider\",\"type\":\"bool\"}],\"name\":\"BackstopLiquidityProviderChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"liquidationPenaltyRatio\",\"type\":\"uint24\"}],\"name\":\"LiquidationPenaltyRatioChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"rate\",\"type\":\"uint24\"}],\"name\":\"MaxFundingRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"maxMarketsPerAccount\",\"type\":\"uint8\"}],\"name\":\"MaxMarketsPerAccountChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"partialCloseRatio\",\"type\":\"uint24\"}],\"name\":\"PartialCloseRatioChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"SettlementTokenBalanceCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"twapInterval\",\"type\":\"uint256\"}],\"name\":\"TwapIntervalChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"candidate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImRatio\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidationPenaltyRatio\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxFundingRate\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxMarketsPerAccount\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMmRatio\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPartialCloseRatio\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSettlementTokenBalanceCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTwapInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBackstopLiquidityProvider\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isProvider\",\"type\":\"bool\"}],\"name\":\"setBackstopLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"liquidationPenaltyRatioArg\",\"type\":\"uint24\"}],\"name\":\"setLiquidationPenaltyRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"rate\",\"type\":\"uint24\"}],\"name\":\"setMaxFundingRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"maxMarketsPerAccountArg\",\"type\":\"uint8\"}],\"name\":\"setMaxMarketsPerAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"partialCloseRatioArg\",\"type\":\"uint24\"}],\"name\":\"setPartialCloseRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"setSettlementTokenBalanceCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"twapIntervalArg\",\"type\":\"uint32\"}],\"name\":\"setTwapInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"candidate()\":{\"details\":\"Returns the candidate that can become the owner.\"},\"getImRatio()\":{\"returns\":{\"_0\":\"Initial margin ratio\"}},\"getLiquidationPenaltyRatio()\":{\"returns\":{\"_0\":\"Liquidation penalty ratio\"}},\"getMaxFundingRate()\":{\"returns\":{\"_0\":\"Max value of funding rate\"}},\"getMaxMarketsPerAccount()\":{\"returns\":{\"_0\":\"Max value of total markets per account\"}},\"getMmRatio()\":{\"returns\":{\"_0\":\"Maintenance margin requirement ratio\"}},\"getPartialCloseRatio()\":{\"returns\":{\"_0\":\"Partial close ratio\"}},\"getSettlementTokenBalanceCap()\":{\"returns\":{\"_0\":\"Max value of settlement token balance\"}},\"getTwapInterval()\":{\"returns\":{\"_0\":\"TwapInterval for funding and prices (mark & index) calculations\"}},\"isBackstopLiquidityProvider(address)\":{\"returns\":{\"_0\":\"is backstop liquidity provider\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setOwner(address)\":{\"details\":\"Set ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateOwner()\":{\"details\":\"Transfers ownership of the contract to a new account (`_candidate`). Can only be called by the new owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ClearingHouseConfig.sol\":\"ClearingHouseConfig\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity >=0.4.24 <0.8.0;\\n\\nimport \\\"../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /// @dev Returns true if and only if the function is running in the constructor\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\nimport \\\"../proxy/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\"},\"contracts/ClearingHouseConfig.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.7.6;\\n\\nimport { SafeOwnable } from \\\"./base/SafeOwnable.sol\\\";\\nimport { ClearingHouseConfigStorageV2 } from \\\"./storage/ClearingHouseConfigStorage.sol\\\";\\nimport { IClearingHouseConfig } from \\\"./interface/IClearingHouseConfig.sol\\\";\\n\\n// never inherit any new stateful contract. never change the orders of parent stateful contracts\\ncontract ClearingHouseConfig is IClearingHouseConfig, SafeOwnable, ClearingHouseConfigStorageV2 {\\n    //\\n    // EVENT\\n    //\\n    event TwapIntervalChanged(uint256 twapInterval);\\n    event LiquidationPenaltyRatioChanged(uint24 liquidationPenaltyRatio);\\n    event PartialCloseRatioChanged(uint24 partialCloseRatio);\\n    event MaxMarketsPerAccountChanged(uint8 maxMarketsPerAccount);\\n    event SettlementTokenBalanceCapChanged(uint256 cap);\\n    event MaxFundingRateChanged(uint24 rate);\\n    event BackstopLiquidityProviderChanged(address indexed account, bool indexed isProvider);\\n\\n    //\\n    // MODIFIER\\n    //\\n\\n    modifier checkRatio(uint24 ratio) {\\n        // CHC_RO: ratio overflow\\n        require(ratio <= 1e6, \\\"CHC_RO\\\");\\n        _;\\n    }\\n\\n    //\\n    // EXTERNAL NON-VIEW\\n    //\\n\\n    function initialize() external initializer {\\n        __SafeOwnable_init();\\n\\n        _maxMarketsPerAccount = type(uint8).max;\\n        _imRatio = 0.1e6; // initial-margin ratio, 10% in decimal 6\\n        _mmRatio = 0.0625e6; // minimum-margin ratio, 6.25% in decimal 6\\n        _liquidationPenaltyRatio = 0.025e6; // initial penalty ratio, 2.5% in decimal 6\\n        _partialCloseRatio = 0.25e6; // partial close ratio, 25% in decimal 6\\n        _maxFundingRate = 0.1e6; // max funding rate, 10% in decimal 6\\n        _twapInterval = 15 minutes;\\n        _settlementTokenBalanceCap = 0;\\n    }\\n\\n    function setLiquidationPenaltyRatio(uint24 liquidationPenaltyRatioArg)\\n        external\\n        checkRatio(liquidationPenaltyRatioArg)\\n        onlyOwner\\n    {\\n        _liquidationPenaltyRatio = liquidationPenaltyRatioArg;\\n        emit LiquidationPenaltyRatioChanged(liquidationPenaltyRatioArg);\\n    }\\n\\n    function setPartialCloseRatio(uint24 partialCloseRatioArg) external checkRatio(partialCloseRatioArg) onlyOwner {\\n        // CHC_IPCR: invalid partialCloseRatio\\n        require(partialCloseRatioArg > 0, \\\"CHC_IPCR\\\");\\n\\n        _partialCloseRatio = partialCloseRatioArg;\\n        emit PartialCloseRatioChanged(partialCloseRatioArg);\\n    }\\n\\n    function setTwapInterval(uint32 twapIntervalArg) external onlyOwner {\\n        // CHC_ITI: invalid twapInterval\\n        require(twapIntervalArg != 0, \\\"CHC_ITI\\\");\\n\\n        _twapInterval = twapIntervalArg;\\n        emit TwapIntervalChanged(twapIntervalArg);\\n    }\\n\\n    function setMaxMarketsPerAccount(uint8 maxMarketsPerAccountArg) external onlyOwner {\\n        _maxMarketsPerAccount = maxMarketsPerAccountArg;\\n        emit MaxMarketsPerAccountChanged(maxMarketsPerAccountArg);\\n    }\\n\\n    function setSettlementTokenBalanceCap(uint256 cap) external onlyOwner {\\n        _settlementTokenBalanceCap = cap;\\n        emit SettlementTokenBalanceCapChanged(cap);\\n    }\\n\\n    function setMaxFundingRate(uint24 rate) external onlyOwner {\\n        _maxFundingRate = rate;\\n        emit MaxFundingRateChanged(rate);\\n    }\\n\\n    function setBackstopLiquidityProvider(address account, bool isProvider) external onlyOwner {\\n        _backstopLiquidityProviderMap[account] = isProvider;\\n        emit BackstopLiquidityProviderChanged(account, isProvider);\\n    }\\n\\n    //\\n    // EXTERNAL VIEW\\n    //\\n\\n    /// @inheritdoc IClearingHouseConfig\\n    function getMaxMarketsPerAccount() external view override returns (uint8) {\\n        return _maxMarketsPerAccount;\\n    }\\n\\n    /// @inheritdoc IClearingHouseConfig\\n    function getImRatio() external view override returns (uint24) {\\n        return _imRatio;\\n    }\\n\\n    /// @inheritdoc IClearingHouseConfig\\n    function getMmRatio() external view override returns (uint24) {\\n        return _mmRatio;\\n    }\\n\\n    /// @inheritdoc IClearingHouseConfig\\n    function getLiquidationPenaltyRatio() external view override returns (uint24) {\\n        return _liquidationPenaltyRatio;\\n    }\\n\\n    /// @inheritdoc IClearingHouseConfig\\n    function getPartialCloseRatio() external view override returns (uint24) {\\n        return _partialCloseRatio;\\n    }\\n\\n    /// @inheritdoc IClearingHouseConfig\\n    function getTwapInterval() external view override returns (uint32) {\\n        return _twapInterval;\\n    }\\n\\n    /// @inheritdoc IClearingHouseConfig\\n    function getSettlementTokenBalanceCap() external view override returns (uint256) {\\n        return _settlementTokenBalanceCap;\\n    }\\n\\n    /// @inheritdoc IClearingHouseConfig\\n    function getMaxFundingRate() external view override returns (uint24) {\\n        return _maxFundingRate;\\n    }\\n\\n    /// @inheritdoc IClearingHouseConfig\\n    function isBackstopLiquidityProvider(address account) external view override returns (bool) {\\n        return _backstopLiquidityProviderMap[account];\\n    }\\n}\\n\",\"keccak256\":\"0x735d60f4012c59f710d76698a68a42b8ed95957388ddbf00cde660164a8b43bc\",\"license\":\"GPL-3.0-or-later\"},\"contracts/base/SafeOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.7.6;\\n\\nimport { ContextUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\n\\nabstract contract SafeOwnable is ContextUpgradeable {\\n    address private _owner;\\n    address private _candidate;\\n\\n    // __gap is reserved storage\\n    uint256[50] private __gap;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        // caller not owner\\n        require(owner() == _msgSender(), \\\"SO_CNO\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n\\n    function __SafeOwnable_init() internal initializer {\\n        __Context_init();\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() external virtual onlyOwner {\\n        // emitting event first to avoid caching values\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n        _candidate = address(0);\\n    }\\n\\n    /**\\n     * @dev Set ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function setOwner(address newOwner) external onlyOwner {\\n        // newOwner is 0\\n        require(newOwner != address(0), \\\"SO_NW0\\\");\\n        // same as original\\n        require(newOwner != _owner, \\\"SO_SAO\\\");\\n        // same as candidate\\n        require(newOwner != _candidate, \\\"SO_SAC\\\");\\n\\n        _candidate = newOwner;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`_candidate`).\\n     * Can only be called by the new owner.\\n     */\\n    function updateOwner() external {\\n        // candidate is zero\\n        require(_candidate != address(0), \\\"SO_C0\\\");\\n        // caller is not candidate\\n        require(_candidate == _msgSender(), \\\"SO_CNC\\\");\\n\\n        // emitting event first to avoid caching values\\n        emit OwnershipTransferred(_owner, _candidate);\\n        _owner = _candidate;\\n        _candidate = address(0);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Returns the candidate that can become the owner.\\n     */\\n    function candidate() external view returns (address) {\\n        return _candidate;\\n    }\\n}\\n\",\"keccak256\":\"0x2e83f0f3a4c9eef7ea1e687c758bd7f801405ce7465a801274439215922f549b\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interface/IClearingHouseConfig.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.7.6;\\n\\ninterface IClearingHouseConfig {\\n    /// @return maxMarketsPerAccount Max value of total markets per account\\n    function getMaxMarketsPerAccount() external view returns (uint8 maxMarketsPerAccount);\\n\\n    /// @return imRatio Initial margin ratio\\n    function getImRatio() external view returns (uint24 imRatio);\\n\\n    /// @return mmRatio Maintenance margin requirement ratio\\n    function getMmRatio() external view returns (uint24 mmRatio);\\n\\n    /// @return liquidationPenaltyRatio Liquidation penalty ratio\\n    function getLiquidationPenaltyRatio() external view returns (uint24 liquidationPenaltyRatio);\\n\\n    /// @return partialCloseRatio Partial close ratio\\n    function getPartialCloseRatio() external view returns (uint24 partialCloseRatio);\\n\\n    /// @return twapInterval TwapInterval for funding and prices (mark & index) calculations\\n    function getTwapInterval() external view returns (uint32 twapInterval);\\n\\n    /// @return settlementTokenBalanceCap Max value of settlement token balance\\n    function getSettlementTokenBalanceCap() external view returns (uint256 settlementTokenBalanceCap);\\n\\n    /// @return maxFundingRate Max value of funding rate\\n    function getMaxFundingRate() external view returns (uint24 maxFundingRate);\\n\\n    /// @return isBackstopLiquidityProvider is backstop liquidity provider\\n    function isBackstopLiquidityProvider(address account) external view returns (bool isBackstopLiquidityProvider);\\n}\\n\",\"keccak256\":\"0x20aca8ab185428ace5e8fd00abc67f4ba5d3a8dd9928dfcc5d367dac48fc2b53\",\"license\":\"GPL-3.0-or-later\"},\"contracts/storage/ClearingHouseConfigStorage.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.7.6;\\n\\n/// @notice For future upgrades, do not change ClearingHouseConfigStorageV1. Create a new\\n/// contract which implements ClearingHouseConfigStorageV1 and following the naming convention\\n/// ClearingHouseConfigStorageVX.\\nabstract contract ClearingHouseConfigStorageV1 {\\n    uint8 internal _maxMarketsPerAccount;\\n    uint24 internal _imRatio;\\n    uint24 internal _mmRatio;\\n    uint24 internal _liquidationPenaltyRatio;\\n    uint24 internal _partialCloseRatio;\\n    uint24 internal _maxFundingRate;\\n    uint32 internal _twapInterval;\\n    uint256 internal _settlementTokenBalanceCap;\\n}\\n\\nabstract contract ClearingHouseConfigStorageV2 is ClearingHouseConfigStorageV1 {\\n    mapping(address => bool) internal _backstopLiquidityProviderMap;\\n}\\n\",\"keccak256\":\"0xb834fc3b7af2ad43c70cc3c2a7bbc9f2c8bef07d3d3bd0b661fd1108624202a5\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "candidate()": {
        "details": "Returns the candidate that can become the owner."
      },
      "getImRatio()": {
        "returns": {
          "_0": "Initial margin ratio"
        }
      },
      "getLiquidationPenaltyRatio()": {
        "returns": {
          "_0": "Liquidation penalty ratio"
        }
      },
      "getMaxFundingRate()": {
        "returns": {
          "_0": "Max value of funding rate"
        }
      },
      "getMaxMarketsPerAccount()": {
        "returns": {
          "_0": "Max value of total markets per account"
        }
      },
      "getMmRatio()": {
        "returns": {
          "_0": "Maintenance margin requirement ratio"
        }
      },
      "getPartialCloseRatio()": {
        "returns": {
          "_0": "Partial close ratio"
        }
      },
      "getSettlementTokenBalanceCap()": {
        "returns": {
          "_0": "Max value of settlement token balance"
        }
      },
      "getTwapInterval()": {
        "returns": {
          "_0": "TwapInterval for funding and prices (mark & index) calculations"
        }
      },
      "isBackstopLiquidityProvider(address)": {
        "returns": {
          "_0": "is backstop liquidity provider"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setOwner(address)": {
        "details": "Set ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateOwner()": {
        "details": "Transfers ownership of the contract to a new account (`_candidate`). Can only be called by the new owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1158,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1161,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2475,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 27037,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 27039,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_candidate",
        "offset": 0,
        "slot": "52",
        "type": "t_address"
      },
      {
        "astId": 27043,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "53",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 32267,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_maxMarketsPerAccount",
        "offset": 0,
        "slot": "103",
        "type": "t_uint8"
      },
      {
        "astId": 32269,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_imRatio",
        "offset": 1,
        "slot": "103",
        "type": "t_uint24"
      },
      {
        "astId": 32271,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_mmRatio",
        "offset": 4,
        "slot": "103",
        "type": "t_uint24"
      },
      {
        "astId": 32273,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_liquidationPenaltyRatio",
        "offset": 7,
        "slot": "103",
        "type": "t_uint24"
      },
      {
        "astId": 32275,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_partialCloseRatio",
        "offset": 10,
        "slot": "103",
        "type": "t_uint24"
      },
      {
        "astId": 32277,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_maxFundingRate",
        "offset": 13,
        "slot": "103",
        "type": "t_uint24"
      },
      {
        "astId": 32279,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_twapInterval",
        "offset": 16,
        "slot": "103",
        "type": "t_uint32"
      },
      {
        "astId": 32281,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_settlementTokenBalanceCap",
        "offset": 0,
        "slot": "104",
        "type": "t_uint256"
      },
      {
        "astId": 32288,
        "contract": "contracts/ClearingHouseConfig.sol:ClearingHouseConfig",
        "label": "_backstopLiquidityProviderMap",
        "offset": 0,
        "slot": "105",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint24": {
        "encoding": "inplace",
        "label": "uint24",
        "numberOfBytes": "3"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}